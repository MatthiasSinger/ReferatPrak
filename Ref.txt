Was ist Refactoring?
Definition:   „a change made to the internal structure of software to make it easier to understand and
	cheaper to modify without changing its observable behavior.”
* Refactoring ist nur Verändern der Struktur, nicht des Verhaltens
* Wichtig, da nur so neue Bugs verhindert werden können
* Ziel = Progrmam wird übersichtlicher und leichter zu verändern
* erhöhte Bedeutung durch interativen Entwicklungsprozess (Agile), da hier schnelle Prototypen
	erstellt werden und dadurch weniger sorgfältig entwickelt
<> Wasserfall mit kompletter Designphase vor der Implementierung
=> Kontinuierliches Design ("Continuous Design")
- Vermeidung von "Software Decay" = Verfall der Qualität bei längerem Bestehen von Software
* Programmierer orientierte Aufgabe: Refactoring, Testing, Dokumentation
* Gefahr, dass man es vernachlässigt, da es dem Kunden egal ist
* Langfristig mehr Zeitverlust durch umständliche Wartung
* Beispiel: Aufräumen
* Macht keinen Spaß, ist aber notwendig
* Erfahrungsgemäß macht man diese Aufgaben gleich oder gar nicht -> Legacy Code
* Soziale Komponente: Keiner will Code von anderen Refactoren
* Broken Windows -> einer machts nicht, keiner machts mehr
* Anzeichen für Refactoring => Code Smells
* Methoden zur Behebung werden jetzt vorgestelllt
